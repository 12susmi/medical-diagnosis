from google import genai
import gradio as gr

# Initialize Gemini client
client = genai.Client(api_key="AIzaSyC3oT79p0r-QxPxPrQRTvRURZ6tgxOAlW4")

# Function for diagnosis
def medical_diagnosis(image, symptoms, language):
    if not image and not symptoms:
        return "‚ö†Ô∏è Please upload an image or enter symptoms."

    inputs = []
    if image:
        uploaded_file = client.files.upload(file=image)
        inputs.append(uploaded_file)
    if symptoms:
        inputs.append(symptoms)

    # Role instruction for Gemini
    inputs.append(
        f"""Act like a professional medical doctor. 
        Identify the disease/problem, explain the issue in detail, 
        suggest food/diet, recommend which doctor to consult, 
        and provide future precautions. Respond in {language}."""
    )

    response = client.models.generate_content(
        model="gemini-2.5-flash",
        contents=inputs,
    )

    return response.text

# Gradio UI
with gr.Blocks(theme="soft") as demo:
    gr.Markdown("<h1 style='text-align:center; color:#2E86C1;'>ü©∫ AI Medical Diagnosis Assistant</h1>")
    gr.Markdown("Upload an image (skin, lung, etc.) and describe your symptoms. The AI will act like a doctor and provide a medical-style report.")

    with gr.Row():
        image_input = gr.Image(type="filepath", label="Upload Medical Image")
        symptoms_input = gr.Textbox(lines=4, placeholder="Describe your symptoms here...", label="Symptoms")

    language_input = gr.Dropdown(
        choices=["English", "Hindi", "Telugu", "Tamil", "Kannada"],
        value="English",
        label="Select Language"
    )

    submit_btn = gr.Button("üîç Diagnose Now")
    output = gr.Textbox(lines=12, label="Medical Report")

    submit_btn.click(
        fn=medical_diagnosis,
        inputs=[image_input, symptoms_input, language_input],
        outputs=output,
    )

demo.launch()
